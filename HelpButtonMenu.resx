<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttongoBackHelp.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA44AAAJRBAMAAAD4xvTpAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAASUExURebm5v///wAAAMjIyJqamlBQUPzGIYgAABCGSURBVHja7Z3Lctu4EkCB3GhPXsp7B5b2
        sVPejzgz+5jO/f9fubFNxbKsBx8Auhs8Z+WuVIUNnwLgZoOkq9+o3Bumw9qbH8LUsJiBVG0I4bl2eDQ9
        kHUXXniu8Gh5IM2bxhA8Hg0PpNprDLd4NDyQh73GsK3waHYg6/DODo9WB/K+qv7mGx6NDsS/VBx/2FT2
        R7RIj/7mwOJv8GhzIM1HjYF11eRA6vbI4876iNwSPfrHI43hyfiIpoXGB+LXxxrDN9sjmhgaH8iHkmPR
        Hnt8/4/GwodPGl/uzFke0eTQ8kBWnzWGu8ryiKaHhgfSdCc8bvBoLPNPJQceLWb+ueTAo8HMT5QceDSY
        edXh8TA0mvnpzRGPxjI/7nLg0WbmTcDjx9Bk5nWHxwI8+i8Bj/Y9+q8BjwV4rDo8luCxDXg8DvvAUMfN
        r8JFj/ZGtMg+8rn7cXi0lfnFzRGPVjI/0+XAo63Mz9+Pw6OlzJsOj6dCY5lfLjnwaCTzKyUHHo1kvg54
        LMFjh0dXgMeHgEdn3+OQVRWP6lNtOjyeDQ2l2gY8ng3tpPoY8Hg+7H9W32Lz6zDUY2VjRLFDG6lWHR4L
        8OjbgEf7Hofcj8Oj/lSbgMcSPLZ4dAV4HLGq4lFvquuAx+uh+lSHlxx41JzqQ8DjgFB7qquAxyGh8lSb
        gMdBofJUWzyW4PEx4LEAj+uAx2FhHyhtsXUTPOoeUaJQd6ptwKOz7/Em4HFgqDm3JuBxaKg5tw6Pg0PF
        uT0EPA4O9ea2DngcHqrNrerwWILHNuCxAI+rgEf7Hv064LEAj5M3Rzxqys3/G/BYm/fobwIeR4Yac2s6
        PI4N+59V9dTaMMtjpW9E9RL7yKuAxwmhttzWAY9TQm25dXgsweNDwGMBHueuqnhUkUzT4bG277FqAx5r
        8x79Y8Dj1FBPMhE2RzwqSKbq8Dg9VJOMbwMep4dakpnX5cCjlmSagMcCPNYtHueEfSDeRFuFWB61jChr
        qCSZOCUHHqWTiVNy4FE4mWibIx4lk/GrgMd5oYZkfNPhcWaoIZmYqyoexZKJ0uXAo3QyEUsOPAomE3Vz
        xKNUMr4NeLTvsV4FPBbgsQl4dAV47PAYJRRO5jHgMUrY/yzTNfNfQwKPleCI3CL7yE2Hx2ih3NXrNuAx
        Wih2df8Y8BgvlLp67PtxeJS5etXhsQCPiVZVPGa++k3AYwEemw6PrgCPbcCjs+9xFfAYOZS4ehPwGDuU
        uHqHx+ihwNUfAh6jh/mvvg54jB72Qb6umW+6tB6zj0hDmP/qVRvwaN9j/RjwWIDHdcCjs++x6vCYIsx9
        9TbgMUWY+XI3AY9JwryXawIe04R5L9fiMVGY9XKrgMdEYc7LrQMeC/CYvuTAY47LtQGP9j36VR6NYbsM
        cUIe/TrgMWHY/5y+TdZl81hlGtEi+8iPIRt4THe5dT6NoVhT8h6rLqPH+1JNyXtsM2oMu1JNiXtc5dQY
        nko1Je2xyaox3JZqStpjl9djf/ARj5HDh7wa9wUkHqOGSd6tcpn7ZYjL67HqsnvcLUNcVo9Vm11j+Fkt
        QlxOj36VX2P/hw4e44V+HSTwixCX0aPA5vjCbhHiPoZ9kKYv9hBEuEs3Iq1h0v9fZlX9DR5jhk2Q4gmP
        EUOBkqNng8dooUjJsecej5FCL7Y5vnCHx0ihUMmx5x6PUUKpkmPPHR5jhAJdjiN2eJwfpn63ygC2Ho+z
        Q8GS4w+/ajzODP1jUMBb+wqPk0PZkuOdvyo8zgkr8c3xje3PGo/TQw2bY8+vut53d6qegsIPHnviNcJE
        78cds/37R4l8//0rT91HlutyLIpf93VSj4pW1cL5ldKjqlW1cLY+mUf5+3FLYnufymOjpORYCK8iE3iU
        7nIsjk0Sjzruxy2K5wQePatqfnbxPVZozM8mvkdWVQmeYntU0uVYGvv3PsXyyKoqxFNcj9yPE2JTxfR4
        E0CI18fLeiWzD1YFkOK2jtZHrtkc5dhG88j9OFF2kTx6Sg5RbiN55H6cLJs4Hik5pPFRPHIEQJpdDI9s
        juLcxvDI5ijOJoJHSg55tvM9cj9OA36uR+7HqWA31yMlhwqeZnqk5NDBt3keKTmU0L9bn4NVxtnM8kjJ
        oYVZHnmWQw3bGR7pcuhhjkdKDkVM98ipY01M9kjJoYqpHik5dDHVI5ujLiZ6pMuhjGke6XJoY5JHVlV1
        TPHIu1X0McEj71ZRyASPlBwKmdB/ZHNUyHiPbI4a4WBVGYz2yOaokrEe6XLohINVZTDOIyWHVkZ5pORQ
        yxiPni6HWsZ4pOTQywiPlByKGe6RU8eaGf7GKrocmhnskVPHqhn8xipKDtX0vq72H+ly6GagR+7HKWeY
        R+7HaWeQR8/mqJ0hHrkfp58hHik59DPAIyWHAa575NSxBa57pMthgase2RxNcM0jXQ4bXPFIl8MIVzyy
        qhrhikdKDiNc9sipYytc6j/S5bDDJY90Oexw6WAVm6MdLhysosthiAsHqwLYgYNVZXDOIyWHLc59Qo6S
        wxbn5iMlhy3OeGRzNMZpjxwBsMZJj5Qc5jjpkc3RHKc8UnLY44RH7scZ5HP/kSMAFvnkkZLDJMceOXVs
        k2OPlBw2OfbIqmqTI4+UHEb56JEuh1U+eKTkMMsHj2yOZjn0SMlhlwOPbI6GeffIEQDLvHvkQUfL/PFI
        l8M0e4/cj7MNB6vKgINVZeC4H1cEfAqwDBzTsQgc5xyLwDEdi8CxOxbBb49VAPM4zh0XgWNZLQLHsloE
        fCq3DFz9JYB9eJ6jDJwLUAA0kMvA0XksAvffAAXg+HO1CBx/rhYBHsvA0UMuAsrHMsBjGeCxDPBYBngs
        A/5eLQM8lgH3AcoAj2XAffIyoG9VBo5TyEXAuY4ycHWAAuDcYxlwDrkMeC6gDHhOpwx4bq4MeI61DHiu
        vAx4z0MZvLzrkb9Y7fP67lV6yeZ59fg1gHFeX6JbsUNa5+1tyOyQ1unfTs7TrMbpX0/Oymoc3jNfBnz3
        oQz4DksZ8F2kMuA7ZWXAdwPLgO94lgHf1S2D/fetKm6Ym+aDR+f57rxRPnp0FB9GOfLouT9nkyOPjuLD
        Jp88UnyY5LNHtkiLfPbIuWSLnPBI58MgpzzyPUh7nPRI58McJz1SfJjjtEeKD2uc8UjxYYwzHtkijfGh
        //ibPyGdD1Oc9cgWaYrzHul8WOK8R+7PWeKCR1ZWQ1zySPFhh0seKT7scNEjxYcZLntki7TCFY+cTDbC
        FY88cG6EKx4dhwNscM2jY2U1wVWPnuLDAlc98k4WE5zrIx+GFB/6GeKRzod+hnik86GfQR5ZWdUzzCOd
        D+0M80jnQzsD5yMPnCtnoEc+g6WcoR65P6ebwR55J4tqBnuk86Ga4R55J4tmRnjknSyKGeGRzodixnik
        +NBL7+tC//EwZIvUyjiPvI1eK+M8Ok/xoZORHh3vZNHJWI8cu9LJWI8UHzoZ7ZHiQyXjPXJ/TiMTPNL5
        UMgEj85/CaCMKR7ZIvUxySOdD3VM88jJZG1M9MjKqoypHik+dDGq/3h47Ir7c6qY6pFPYeliskc+Va+J
        7XSPnExWxByP3J/Tw2aGRw4H6OFujkc6H2r4Nssjj0VqYaZHPtiihKeZHjl2pYP7uR7pfKignuuRzocG
        tvM90vlQwF0EjxQf8jxF8EjxIc9u31Ec3X88COl8SLP1LoJHjl1Js6miePR0PmR5cnE8skXKch/LI+9k
        keRgWZ3rkftzghwsq7M9srKKcfDX6nyP3J8T47aK6ZHiQ4qDv3JieKT4kOGuiuuRlVWGw90xike+FinB
        zzq6Rzof+dnW8T3yzEd+7hN4pPORnb/+WNiviS5KSPGRled6byGyR7bInPztXSKP3J/Lx/a7d8k80vnI
        xXN1uDNG90jnYzTb/43l1z/fj37t8T0qO5m8/fXPjxN8dyeoTZHYo6pnPra7P8P2Ve19VV0YgncJfhuZ
        wgT/v6Li4/l3bmbVSHus1HQ+dnW54jJ41HJ/blc5PM4Jddyf+6tyeJwXangny3Pt8Dgz9GvxLXJbOzzO
        DuXfRn9f4TFCKF183NUL89gTpf94GAp3Pnz8ESkPU/3/osXHbYXHWKHkFnnv8Bgr9HIr68uZTjzGCuU6
        HzuHx3ih2NciX2tHPEYLpYqP16PyeIwXChUfu0WIy+hRpvPx9kAgHiOGIp2Pt+es8RgzlOh8/FyGuKwe
        Jd7JsluGuKweJd5G75chLq/H/G+j719DgsfYYYfH9GEfJGyT5S4+npKPSGGY43KZDwfgMdXl8t6f2y1C
        nITHvJ/C8osQJ+Ix68q6DHEiHl39bzaN22WIk/GYsfOBx5SXy1d8bJYhTshjvi0Sj4kv1+KxCI+Ztkg8
        pr7cGo9FeMzzThY8pr9ch8dEYd7LNXhMFPY/Z2qT5Sg+9u95po+cMMxQfGzwmOFy6YsPPOa4XPr7c6yr
        ea6e+mQy8zHT1ROvrMzHTFdPXHwwH3NdPW3xwXzMdvWk9+eYj9munrT4YD7mu3rK4oP5mPHqX9J5ZD7m
        vHq6+3PMx5xXT1d8MB+zXj3ZO1kWOh/7IH/XLNXKSh8579VTFR94zHz1NR6L8JjoO7x4zH71Fo+xQtGr
        J3ksEo/5r36Dx0ihcDIPeIwTSifT4TFKKJ3MGo9RQulk4h8OwKNIMtGLDzzKJBO7+MCjTDKx30aPR6Fk
        fIvH2WH/s2wTLerKSh9ZLJmoxQfnOuSSWeFxdqgimYhbJOuqYDIRDwcwHyWTibdFMh8lk4n3Nnrmo2gy
        0YoP5qNsMrFOJjMfZZOJ9U4W5qNwMpGKD+ajdDJxOh/MR+lk4ryThfkonkyUd7IwH+WTifG1SJ63UhBG
        KD7oIyvILULnA48acpt/MhmPKnKb3fnAo4rcZhcfeNSR29z7c3hUkpvv8Dg61Jhbg8fRocbc5q2seFST
        26zOBx715Dan84FHPbnNKT7wqCm3RzwW4XH6FolHVbk1eBzlsUddT23yY5H0kXXlNrXzwbkOZblNvD+H
        R225TSs+WFe15Tbt/hzzUV1uk4oP5qO+3Brm4+BQdao3zMe6BI8Tig/mo8ZUxx+7Yj6qTHXNfCzC4+iT
        ycxHpam2zMchofpUR26RzEetqa6Zj9fDPtDcYhv3Thb6yGpTHfVOFjzqTXWNx7oEj2OKDzxqTrXFYxEe
        h59MxqPqVNd4LMLj4JPJeNSd6tDbOnhUnmqDx/OhpcxXeDwbmsq8xeO50FbmHR5dCR7XeHQleBzS+eB5
        q4NYbXh9ZaWPbCHz68UH5zpMZH6Dx9Ohtcxb1tWTobXMrxUfzEcjma+Zj6dCe5k/Mh9PhAYzb5mPrgSP
        DfPRleDx4mORzEc7mV96LJL5aCjzC/fnmI+WMl8zH4vweP6dLMxHU5mf/RQWz1vZCs+dTKaPbGwgN3h8
        Dy0P5PTKemd4RMv0eLrzgUdrAznd+cCjuYGc/A4vHu0N5FTx8c30iKaGxgdyYovEo8GBnLitg0eLA/nc
        +XgyPqJpofmBfFpZd9ZH5Bbp8dOnsCrrI3KL9Hi8RW7xaHQg/kPxscGj1YF86Hx8W4i4Y489lhtwH1bW
        3WIax2X0kQ/Dg87Htsaj2YH495X1Fo+GB/JefHg8Wh5I/fVN488aj6YHUv/nZWl9tjwEh8fXoPnhbQ8B
        j0sPnfs/0CWo7exO1aUAAAAASUVORK5CYII=
</value>
  </data>
</root>